version: "3.0"
services:
  edu_db:
    container_name: "edu_db"
    image: postgres:14.1-alpine
    #    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - custom

  edu_app:
    container_name: edu_app
    image: edu_app
    depends_on:
      - edu_db
      - alembic_migrations
    environment:
      REAL_DATABASE_URL: "postgresql+asyncpg://postgres:postgres@edu_db:5432/postgres"
      SENTRY_URL: ""
      APP_PORT: "8000"
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    networks:
      - custom

  alembic_migrations:
    container_name: alembic_migrations
    image: alembic_migrations
    command: ./run.sh
    depends_on:
      - edu_db
    environment:
      ALEMBIC_DATABASE_URL: "postgresql+asyncpg://postgres:postgres@edu_db/postgres"
      REAL_DATABASE_URL: "postgresql+asyncpg://postgres:postgres@edu_db:5432/postgres"
      SENTRY_URL: ""
      APP_PORT: "8001"
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8001:8001"
    networks:
      - custom

  prometheus:
    depends_on:
      - edu_app
    image: prom/prometheus:v2.43.0
    container_name: prometheus
#    restart: unless-stopped
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yaml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yaml'
    ports:
      - "9090:9090"
    networks:
      - custom

  grafana:
    image: grafana/grafana:8.5.22
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - grafana-config:/etc/grafana
    depends_on:
      - prometheus
#    restart: always
    networks:
      - custom
    user: "0"

networks:
  custom:
    driver: bridge

volumes:
  db-data:
  grafana-data:
  grafana-config:
  prometheus-data:
